name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  php-tests:
    name: PHP Tests
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        php-version: ['8.1', '8.2', '8.3']
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-version }}
        extensions: mbstring, xml, ctype, iconv, intl, pdo_mysql, redis
        coverage: xdebug
    
    - name: Install PHP dependencies
      run: |
        cd tests
        composer install --prefer-dist --no-progress
    
    - name: Run PHP tests with coverage
      run: |
        cd tests
        vendor/bin/phpunit --coverage-clover=coverage.xml
    
    - name: Upload PHP coverage to Codecov
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: tests/coverage.xml
        flags: php
        name: php-coverage
        fail_ci_if_error: true

  python-tests:
    name: Python Tests
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12']
    
    services:
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r SphinxAI/requirements-runtime.txt
        pip install -r tests/requirements_test.txt
    
    - name: Run Python tests with coverage
      run: |
        cd tests
        python -m pytest python/ --cov=../SphinxAI --cov-report=xml:coverage.xml --cov-report=term-missing
      env:
        REDIS_HOST: localhost
        REDIS_PORT: 6379
    
    - name: Upload Python coverage to Codecov
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: tests/coverage.xml
        flags: python
        name: python-coverage
        fail_ci_if_error: true

  lint-php:
    name: PHP Linting
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.1'
        extensions: mbstring, xml, ctype, iconv, intl
        tools: phpstan, psalm
    
    - name: Install PHP dependencies
      run: |
        cd tests
        composer install --prefer-dist --no-progress
    
    - name: Run PHP Static Analysis
      run: |
        cd tests
        vendor/bin/phpstan analyse ../php --level=8 --no-progress
    
    - name: Check PHP Code Style
      run: |
        cd tests
        vendor/bin/phpcs ../php --standard=PSR12 --extensions=php

  lint-python:
    name: Python Linting
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
        cache: 'pip'
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r tests/requirements_test.txt
        pip install -r SphinxAI/requirements-runtime.txt
    
    - name: Run Python linting
      run: |
        pylint SphinxAI/ tests/python/ --rcfile=.pylintrc
    
    - name: Check Python code formatting
      run: |
        black --check SphinxAI/ tests/python/
    
    - name: Check Python import sorting
      run: |
        isort --check-only SphinxAI/ tests/python/
    
    - name: Run Python type checking
      run: |
        mypy SphinxAI/ --ignore-missing-imports

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'table'

  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: [php-tests, python-tests]
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: smf_test
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
      
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.1'
        extensions: mbstring, xml, ctype, iconv, intl, pdo_mysql, redis
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        # PHP dependencies
        cd tests
        composer install --prefer-dist --no-progress
        cd ..
        
        # Python dependencies
        python -m pip install --upgrade pip
        pip install -r SphinxAI/requirements-runtime.txt
        pip install -r tests/requirements_test.txt
    
    - name: Run integration tests
      run: |
        cd tests
        python run_tests.py
      env:
        DB_HOST: 127.0.0.1
        DB_PORT: 3306
        DB_USER: root
        DB_PASSWORD: root
        DB_NAME: smf_test
        REDIS_HOST: localhost
        REDIS_PORT: 6379
